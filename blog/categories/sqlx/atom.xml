<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Sqlx | thoughts in plain text]]></title>
  <link href="http://lc0.github.io/blog/categories/sqlx/atom.xml" rel="self"/>
  <link href="http://lc0.github.io/"/>
  <updated>2015-12-27T01:47:31+01:00</updated>
  <id>http://lc0.github.io/</id>
  <author>
    <name><![CDATA[Sergii Khomenko]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Crunching data with go: Tips, tricks and use-cases]]></title>
    <link href="http://lc0.github.io/blog/2014/06/29/crunching-data-with-go-tips/"/>
    <updated>2014-06-29T18:09:00+02:00</updated>
    <id>http://lc0.github.io/blog/2014/06/29/crunching-data-with-go-tips</id>
    <content type="html"><![CDATA[<p>Go or Golang is an open source programming language initially developed by Google.
First time I tried Go in 2009 or so, because I was interested in a very nice approach to synchronization based on channels.
And now, many years later, I’m back to this nice language, but now with completely different tasks and expectations.</p>

<p>So, because of my current position, I was interested in a bit different feature set, that usually you ask language for.
In that blog post I’m going to describe a couple of my use-cases of Go and how you could solve such task with a couple of tips and examples that
unfortunately aren’t covered in documentations.</p>

<p>Also, this blog spot is kind of follow-up after the meetup of <a href="http://www.meetup.com/Munich-Gophers-Go-User-Group/">Munich Gophers - Munich Golang User Group</a> organazied by me and Dominic on April 24, 2014.
Bellow you could find slides and video of the talk.</p>

<p><script async="true" class="speakerdeck-embed"  data-ratio="1.7" data-id="908a0150ae25013156984eab6e1d3af5" src="//speakerdeck.com/assets/embed.js"> </script></p>

<!--more-->

<h2 id="problem-definition">Problem definition</h2>

<p>The talk and blog post considered to cover one real-world task with different components.
For</p>

<h2 id="fetching-data-from-relational-databases">Fetching data from relational databases</h2>

<h2 id="google-analytics-and-bigquery">Google Analytics and BigQuery</h2>

<h2 id="geolocation-and-other-geo-ip-decoding">Geolocation and other geo-ip decoding</h2>

<p><div class="embed-video-container"><iframe src="http://www.youtube.com/embed/I-2yJ6ObpzM"></iframe></div></p>
]]></content>
  </entry>
  
</feed>
